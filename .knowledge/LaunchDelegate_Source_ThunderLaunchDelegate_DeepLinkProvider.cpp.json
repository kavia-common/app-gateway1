{"is_source_file": true, "format": "C++", "description": "This file implements the DeepLinkProvider class, which manages deep link launching, support, and status notifications within a plugin architecture. It handles URI schemes, manages launch states, and provides callback mechanisms for status updates and foreground changes.", "external_files": ["DeepLinkProvider.h"], "external_methods": ["Core::ERROR_NONE", "Core::ERROR_UNAVAILABLE", "Core::ERROR_BAD_REQUEST", "Core::ERROR_UNKNOWN_KEY", "Core::Time::Now().Ticks()"], "published": ["DeepLinkProvider::Start", "DeepLinkProvider::Stop", "DeepLinkProvider::SupportsAppId", "DeepLinkProvider::SupportsScheme", "DeepLinkProvider::Launch", "DeepLinkProvider::Cancel", "DeepLinkProvider::Activate", "DeepLinkProvider::Info", "DeepLinkProvider::OnStatus", "DeepLinkProvider::OnForegroundChanged"], "classes": [{"name": "DeepLinkProvider", "description": "A class providing deep link handling services including launching, support checking, and callbacks for status and foreground state changes."}], "methods": [{"name": "DeepLinkProvider()", "description": "Constructor initializing callback members, running state, and supported schemes.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "~DeepLinkProvider()", "description": "Destructor that stops the provider.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "uint32_t Start(const Config &)", "description": "Starts the deep link provider, setting it to a running state.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "void Stop()", "description": "Stops the deep link provider, setting it to not running.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "bool SupportsAppId() const", "description": "Indicates whether app ID support is available; returns false.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "bool SupportsScheme(const string & scheme) const", "description": "Checks if the provided scheme is supported by the provider.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "uint32_t Launch(const string & launchId,const string & appId,const string & uri,const string & intent,const Core::JSON::VariantContainer &,const bool background,const bool bringToFront,const uint32_t,LaunchEvent & initialEvent)", "description": "Handles the initiation of a deep link launch, validating URI schemes, updating event states, and invoking callbacks.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "uint32_t Cancel(const string & launchId,const string & reason)", "description": "Cancels a launch event with a specified reason.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "uint32_t Activate(const string &,const Core::JSON::VariantContainer &)", "description": "Handles activation requests; treated as success if provider is running.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "ProviderInfo Info(const string & providerId) const", "description": "Provides information about the provider, including supported schemes and intents.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "void OnStatus(StatusCallback cb)", "description": "Registers a callback for status updates related to deep link events.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"name": "void OnForegroundChanged(ForegroundCallback cb)", "description": "Registers a callback for foreground state change events.", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}], "calls": ["Core::Time::Now().Ticks()", "SupportsScheme(scheme)", "initialEvent.launchId = launchId", "initialEvent.providerId = \"deeplink\"", "initialEvent.state = LaunchState::Accepted", "initialEvent.message = \"Deep link accepted\"", "_statusCb(initialEvent)", "_fgCb(string(), \"foreground\", \"deeplink\", Core::Time::Now().Ticks())", "LaunchEvent started = initialEvent", "LaunchEvent st = initialEvent", "ev.timestampMs = Core::Time::Now().Ticks()", "ev.state = LaunchState::Canceled", "ev.providerId = \"deeplink\"", "ev.message = reason", "return Core::ERROR_NONE", "return _running ? Core::ERROR_NONE : Core::ERROR_UNAVAILABLE"], "search-terms": ["DeepLinkProvider", "deep link", "URI schemes", "launch deep link", "foreground callback", "status callback", "supports scheme", "cancel launch", "activate link"], "state": 2, "file_id": 34, "knowledge_revision": 69, "git_revision": "", "ctags": [{"_type": "tag", "name": "Activate", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    uint32_t DeepLinkProvider::Activate(const string&, const Core::JSON::VariantContainer&) {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const string &,const Core::JSON::VariantContainer &)", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "Cancel", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    uint32_t DeepLinkProvider::Cancel(const string& launchId, const string& reason) {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const string & launchId,const string & reason)", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "DeepLinkProvider", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    DeepLinkProvider::DeepLinkProvider()$/", "language": "C++", "kind": "function", "signature": "()", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "Info", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    ProviderInfo DeepLinkProvider::Info(const string& providerId) const {$/", "language": "C++", "typeref": "typename:ProviderInfo", "kind": "function", "signature": "(const string & providerId) const", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "Launch", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    uint32_t DeepLinkProvider::Launch(const string& launchId,$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const string & launchId,const string & appId,const string & uri,const string & intent,const Core::JSON::VariantContainer &,const bool background,const bool bringToFront,const uint32_t,LaunchEvent & initialEvent)", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "OnForegroundChanged", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    void DeepLinkProvider::OnForegroundChanged(ForegroundCallback cb) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(ForegroundCallback cb)", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "OnStatus", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    void DeepLinkProvider::OnStatus(StatusCallback cb) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(StatusCallback cb)", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "Plugin", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^namespace Plugin {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "Start", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    uint32_t DeepLinkProvider::Start(const Config&) {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const Config &)", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "Stop", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    void DeepLinkProvider::Stop() {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "SupportsAppId", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    bool DeepLinkProvider::SupportsAppId() const {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "() const", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "SupportsScheme", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    bool DeepLinkProvider::SupportsScheme(const string& scheme) const {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & scheme) const", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}, {"_type": "tag", "name": "~DeepLinkProvider", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "pattern": "/^    DeepLinkProvider::~DeepLinkProvider() {$/", "language": "C++", "kind": "function", "signature": "()", "scope": "Plugin::DeepLinkProvider", "scopeKind": "class"}], "hash": "a51090bda28eeea0430185812a5b4a75", "format-version": 4, "code-base-name": "app-gateway", "filename": "LaunchDelegate/Source/ThunderLaunchDelegate/DeepLinkProvider.cpp", "revision_history": [{"69": ""}]}
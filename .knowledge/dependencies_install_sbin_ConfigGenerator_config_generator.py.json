{"is_source_file": true, "format": "Python", "description": "This Python script, `config_generator.py`, is designed to generate JSON configuration files for a project. It includes functions for loading modules, reading configuration parameters, checking assignments, and managing command-line arguments for configuring its behavior. The script interacts with other project components such as `json_helper` and `ProxyStubGenerator.Log`, indicating it is part of a larger codebase responsible for config generation and logging.", "external_files": ["json_helper.py", "ProxyStubGenerator/Log.py"], "external_methods": ["JSON().add()", "JSON().serialize()", "Log.Log()", "Log.Error()", "Log.Print()"], "published": ["file_name", "load_module", "prepend_file", "get_config_params", "check_assignment"], "classes": [], "methods": [{"name": "file_name(path)", "description": "Extracts the base filename without extension from a given path.", "scope": "", "scopeKind": ""}, {"name": "load_module(name, path)", "description": "Loads a Python module from a specified file path using importlib machinery.", "scope": "", "scopeKind": ""}, {"name": "prepend_file(file, line)", "description": "Prepends a given line to a specified file.", "scope": "", "scopeKind": ""}, {"name": "get_config_params(file)", "description": "Reads configuration parameters from a file and returns them as a list of strings.", "scope": "", "scopeKind": ""}, {"name": "check_assignment(file, var)", "description": "Checks whether a variable is assigned or referenced within brackets in a file.", "scope": "", "scopeKind": ""}], "calls": ["argparser.add_argument()", "sys.argv", "os.path.exists()", "load_module()", "get_config_params()", "check_assignment()", "log.Error()", "log.Print()", "sys.exit()"], "search-terms": ["config_generator", "load_module", "check_assignment", "json_helper", "ProxyStubGenerator.Log", "prepend_file", "get_config_params"], "state": 2, "file_id": 39, "knowledge_revision": 567, "git_revision": "374355e3fbadb9af376f63419da49942013707f8", "ctags": [{"_type": "tag", "name": "DOC_ISSUES", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^DOC_ISSUES = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "INDENT_SIZE", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^INDENT_SIZE = 2$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Log", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^import ProxyStubGenerator.Log as Log$/", "language": "Python", "kind": "namespace", "nameref": "module:ProxyStubGenerator.Log"}, {"_type": "tag", "name": "NAME", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^NAME = \"ConfigGenerator\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "PARAM_CONFIG", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^PARAM_CONFIG = \"params.config\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SHOW_WARNINGS", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^SHOW_WARNINGS = True$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "VERBOSE", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^VERBOSE = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "argparser", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^    argparser = argparse.ArgumentParser($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "args", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^    args = argparser.parse_args(sys.argv[1:])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "boiler_plate", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^boiler_plate = \"from json_helper import *\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "cf", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^        cf = args.configfile$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "cf", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^    cf = args.projectdir + \"\\/\" + cf$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "check_assignment", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^def check_assignment(file, var):$/", "language": "Python", "kind": "function", "signature": "(file, var)"}, {"_type": "tag", "name": "file_name", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^def file_name(path):$/", "language": "Python", "kind": "function", "signature": "(path)"}, {"_type": "tag", "name": "get_config_params", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^def get_config_params(file):$/", "language": "Python", "kind": "function", "signature": "(file)"}, {"_type": "tag", "name": "iconfig", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^        res, iconfig = load_module(file_name(cf), cf)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "isEmpty", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^                    isEmpty = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "isEmpty", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^            isEmpty = True$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "load_module", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^def load_module(name, path):$/", "language": "Python", "kind": "function", "signature": "(name, path)"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^log = Log.Log(NAME, VERBOSE, SHOW_WARNINGS, DOC_ISSUES)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "of", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^        of = args.ofile$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "params", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^            params = get_config_params(args.params_config)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "prepend_file", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^def prepend_file(file, line):$/", "language": "Python", "kind": "function", "signature": "(file, line)"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^        res, iconfig = load_module(file_name(cf), cf)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/app-gateway1/dependencies/install/sbin/ConfigGenerator/config_generator.py", "pattern": "/^    result = JSON()$/", "language": "Python", "kind": "variable"}], "hash": "f1cd92625ef4a92d348f931743478a05", "format-version": 4, "code-base-name": "app-gateway", "filename": "dependencies/install/sbin/ConfigGenerator/config_generator.py", "fields": [{"name": "DOC_ISSUES = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INDENT_SIZE = 2", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "NAME = \"ConfigGenerator\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "PARAM_CONFIG = \"params.config\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SHOW_WARNINGS = True", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "VERBOSE = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "argparser = argparse.ArgumentParser(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "args = argparser.parse_args(sys.argv[1:])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "boiler_plate = \"from json_helper import *\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cf = args.configfile", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cf = args.projectdir + \"\\/\" + cf", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "res, iconfig = load_module(file_name(cf), cf)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "isEmpty = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "isEmpty = True", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "log = Log.Log(NAME, VERBOSE, SHOW_WARNINGS, DOC_ISSUES)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "of = args.ofile", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "params = get_config_params(args.params_config)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "result = JSON()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"567": "374355e3fbadb9af376f63419da49942013707f8"}]}
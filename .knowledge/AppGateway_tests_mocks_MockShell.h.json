{"is_source_file": true, "format": "C++ header file", "description": "This file contains mock implementations of classes related to the WPEFramework, specifically for testing purposes. It defines a MockRemoteConnection class implementing RPC::IRemoteConnection and a MockShell class implementing PluginHost::IShell, with various methods and stubbed behaviors used for unit testing within the framework.", "external_files": ["<WPEFramework/plugins/IShell.h>", "<WPEFramework/core/core.h>", "<WPEFramework/plugins/JSONRPC.h>", "\"MockAppManager.h\""], "external_methods": ["Core::InterlockedIncrement", "Core::InterlockedDecrement"], "published": ["MockRemoteConnection", "MockShell"], "classes": [{"name": "MockRemoteConnection", "description": "A mock implementation of RPC::IRemoteConnection for testing Remote connection behaviors."}, {"name": "MockShell", "description": "A mock implementation of PluginHost::IShell to simulate shell behaviors in tests."}], "methods": [{"name": "MockRemoteConnection::Id", "description": "Returns the connection ID."}, {"name": "MockShell::Backend", "description": "Sets the backend app manager for the shell."}, {"name": "MockShell::AddRef", "description": "Increments the reference count."}, {"name": "MockShell::Release", "description": "Decrements the reference count and deletes the object if count reaches zero."}, {"name": "MockShell::QueryInterface", "description": "Stub for interface querying, returns nullptr."}, {"name": "MockShell::EnableWebServer", "description": "Stub for enabling web server."}, {"name": "MockShell::DisableWebServer", "description": "Stub for disabling web server."}, {"name": "MockShell::Model", "description": "Returns a mock model string."}, {"name": "MockShell::SystemRootPath", "description": "Returns success code for setting system root path."}, {"name": "MockShell::Configuration related", "description": "Methods to get/set configuration, path strings, and other properties."}, {"name": "string Accessor() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Activate(const reason)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t AddRef() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void * Aquire(const uint32_t,const uint32_t,const uint32_t)", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "void Backend(Exchange::IAppManager * mgr)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void BackendCallsign(const string & cs)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "bool Background() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "ICOMLink * COMLink()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string Callee() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "string Caller() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "string Callsign() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string ClassName() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void Config(const string & config)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult ConfigLine(const string & cfg)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string ConfigLine() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string DataPath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Deactivate(const reason)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void DisableWebServer()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void EnableWebServer(const string &,const string &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string HashKey() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Hibernate(const uint32_t)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t Id() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "void * Instantiate(const RPC::Object &,const uint32_t,uint32_t & connectionId)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class", "description": "unavailable"}, {"name": "bool IsSupported(const uint8_t) const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string Locator() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Metadata(string &) const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "MockRemoteConnection(uint32_t id)", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "MockShell()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string Model() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void Notify(const string &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string PersistentPath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string PluginPath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string ProxyStubPath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void * QueryInterface(const uint32_t)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void * QueryInterfaceByCallsign(const uint32_t id,const string & name)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "reason Reason() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void Register(INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class", "description": "unavailable"}, {"name": "void Register(RPC::IRemoteConnection::INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class", "description": "unavailable"}, {"name": "void Register(IPlugin::INotification *)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t Release() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void Release() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "RPC::IRemoteConnection * RemoteConnection(const uint32_t connectionId)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Resumed(const bool)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "bool Resumed() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Startup(const startup)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "PluginHost::IShell::startup Startup() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "state State() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "ISubSystem * SubSystems()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t Submit(const uint32_t,const Core::ProxyType<Core::JSON::IElement> &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string Substitute(const string & input) const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string SystemPath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult SystemRootPath(const string &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string SystemRootPath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void Terminate()", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "Core::hresult Unavailable(const reason)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "void Unregister(INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class", "description": "unavailable"}, {"name": "void Unregister(const RPC::IRemoteConnection::INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class", "description": "unavailable"}, {"name": "void Unregister(IPlugin::INotification *)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string Versions() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string VolatilePath() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string WebPrefix() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}], "calls": ["Core::InterlockedIncrement", "Core::InterlockedDecrement"], "search-terms": ["MockShell", "MockRemoteConnection", "IShell", "JSONRPC", "AppManager"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "Accessor", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string Accessor() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Activate", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Activate(const reason) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const reason)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "AddRef", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        uint32_t AddRef() const override {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Aquire", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void* Aquire(const uint32_t, const uint32_t, const uint32_t) override { return nullptr; /", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(const uint32_t,const uint32_t,const uint32_t)", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "Backend", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Backend(Exchange::IAppManager* mgr) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Exchange::IAppManager * mgr)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "BackendCallsign", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void BackendCallsign(const string& cs) { _backendCallsign = cs; }$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const string & cs)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Background", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        bool Background() const override { return false; }$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "COMLink", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        ICOMLink* COMLink() override { return &_comLink; }$/", "language": "C++", "typeref": "typename:ICOMLink *", "kind": "function", "signature": "()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Callee", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        virtual string Callee() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "Caller", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        virtual string Caller() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "Callsign", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string Callsign() const override { return _callsign; }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "ClassName", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string ClassName() const override { return _T(\"AppGateway\"); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Config(const string& config) { _config = config; }$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const string & config)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "ConfigLine", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult ConfigLine(const string& cfg) override { _config = cfg; return Core::ERROR/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const string & cfg)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "ConfigLine", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string ConfigLine() const override { return _config; }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "DataPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string DataPath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Deactivate", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Deactivate(const reason) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const reason)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "DisableWebServer", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void DisableWebServer() override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "EnableWebServer", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void EnableWebServer(const string&, const string&) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const string &,const string &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "HashKey", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string HashKey() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Hibernate", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Hibernate(const uint32_t) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const uint32_t)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Id", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        uint32_t Id() const override { return _id; }$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "Instantiate", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^            void* Instantiate(const RPC::Object& \\/*object*\\/, const uint32_t \\/*waitTime*\\/, ui/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(const RPC::Object &,const uint32_t,uint32_t & connectionId)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class"}, {"_type": "tag", "name": "IsSupported", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        bool IsSupported(const uint8_t \\/*version*\\/) const override { return true; }$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const uint8_t) const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Locator", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string Locator() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Metadata", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Metadata(string& \\/*info*\\/) const override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(string &) const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "MockRemoteConnection", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        MockRemoteConnection(uint32_t id) : _id(id) {}$/", "language": "C++", "kind": "function", "signature": "(uint32_t id)", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "MockRemoteConnection", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^    class MockRemoteConnection final : public RPC::IRemoteConnection {$/", "language": "C++", "kind": "class", "scope": "WPEFramework::Testing", "scopeKind": "namespace"}, {"_type": "tag", "name": "MockShell", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        MockShell()$/", "language": "C++", "kind": "function", "signature": "()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "MockShell", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^    class MockShell final : public PluginHost::IShell {$/", "language": "C++", "kind": "class", "scope": "WPEFramework::Testing", "scopeKind": "namespace"}, {"_type": "tag", "name": "Model", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string Model() const override { return _T(\"MockModel\"); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Notify", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Notify(const string&) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const string &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "PersistentPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string PersistentPath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "PluginPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string PluginPath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "ProxyStubPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string ProxyStubPath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "QueryInterface", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void* QueryInterface(const uint32_t \\/*id*\\/) override {$/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(const uint32_t)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "QueryInterfaceByCallsign", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void* \\/* @interface:id *\\/ QueryInterfaceByCallsign(const uint32_t id, const string& na/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(const uint32_t id,const string & name)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Reason", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        reason Reason() const override { return reason::REQUESTED; }$/", "language": "C++", "typeref": "typename:reason", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^            void Register(INotification* \\/*sink*\\/) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^            void Register(RPC::IRemoteConnection::INotification* \\/*sink*\\/) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(RPC::IRemoteConnection::INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Register(IPlugin::INotification* \\/*sink*\\/) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IPlugin::INotification *)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Release", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        uint32_t Release() const override {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Release", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Release() const override { delete this; }$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "RemoteConnection", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^            RPC::IRemoteConnection* RemoteConnection(const uint32_t connectionId) override {$/", "language": "C++", "typeref": "typename:RPC::IRemoteConnection *", "kind": "function", "signature": "(const uint32_t connectionId)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class"}, {"_type": "tag", "name": "Resumed", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Resumed(const bool) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const bool)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Resumed", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        bool Resumed() const override { return false; }$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "SimpleCOMLink", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        class SimpleCOMLink final : public ICOMLink {$/", "language": "C++", "kind": "class", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Startup", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Startup(const startup) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const startup)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Startup", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        PluginHost::IShell::startup Startup() const override { return PluginHost::IShell::startu/", "language": "C++", "typeref": "typename:PluginHost::IShell::startup", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "State", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        state State() const override { return state::ACTIVATED; }$/", "language": "C++", "typeref": "typename:state", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "SubSystems", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        ISubSystem* SubSystems() override { return nullptr; }$/", "language": "C++", "typeref": "typename:ISubSystem *", "kind": "function", "signature": "()", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Submit", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        uint32_t Submit(const uint32_t \\/*Id*\\/, const Core::ProxyType<Core::JSON::IElement>& \\//", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const uint32_t,const Core::ProxyType<Core::JSON::IElement> &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Substitute", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string Substitute(const string& input) const override { return input; }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "(const string & input) const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "SystemPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string SystemPath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "SystemRootPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult SystemRootPath(const string&) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const string &)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "SystemRootPath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string SystemRootPath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Terminate", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Terminate() override { \\/* no-op *\\/ }$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "Testing", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^namespace Testing {$/", "language": "C++", "kind": "namespace", "scope": "WPEFramework", "scopeKind": "namespace"}, {"_type": "tag", "name": "Unavailable", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Core::hresult Unavailable(const reason) override { return Core::ERROR_NONE; }$/", "language": "C++", "typeref": "typename:Core::hresult", "kind": "function", "signature": "(const reason)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Unregister", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^            void Unregister(INotification* \\/*sink*\\/) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class"}, {"_type": "tag", "name": "Unregister", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^            void Unregister(const RPC::IRemoteConnection::INotification* \\/*sink*\\/) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const RPC::IRemoteConnection::INotification *)", "scope": "WPEFramework::Testing::MockShell::SimpleCOMLink", "scopeKind": "class"}, {"_type": "tag", "name": "Unregister", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        void Unregister(IPlugin::INotification* \\/*sink*\\/) override {}$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IPlugin::INotification *)", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "Versions", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string Versions() const override { return _T(\"[1]\"); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "VolatilePath", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string VolatilePath() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "WPEFramework", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^namespace WPEFramework {$/", "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "WebPrefix", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string WebPrefix() const override { return string(); }$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "() const", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "_appManager", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        Exchange::IAppManager* _appManager { nullptr };$/", "language": "C++", "typeref": "typename:Exchange::IAppManager *", "kind": "member", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "_backendCallsign", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string _backendCallsign;$/", "language": "C++", "typeref": "typename:string", "kind": "member", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "_callsign", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string _callsign;$/", "language": "C++", "typeref": "typename:string", "kind": "member", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "_comLink", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        SimpleCOMLink _comLink;$/", "language": "C++", "typeref": "typename:SimpleCOMLink", "kind": "member", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "_config", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        string _config;$/", "language": "C++", "typeref": "typename:string", "kind": "member", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}, {"_type": "tag", "name": "_id", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        uint32_t _id { 0 };$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class"}, {"_type": "tag", "name": "_refCount", "path": "/home/kavia/workspace/code-generation/app-gateway1/AppGateway/tests/mocks/MockShell.h", "pattern": "/^        mutable uint32_t _refCount;$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class"}], "hash": "922b495bb2d6ae4dfd7a519c310bb904", "format-version": 4, "code-base-name": "app-gateway", "filename": "AppGateway/tests/mocks/MockShell.h", "fields": [{"name": "Exchange::IAppManager * _appManager", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string _backendCallsign", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string _callsign", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "SimpleCOMLink _comLink", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "string _config", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t _id", "scope": "WPEFramework::Testing::MockRemoteConnection", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t _refCount", "scope": "WPEFramework::Testing::MockShell", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"19": ""}]}
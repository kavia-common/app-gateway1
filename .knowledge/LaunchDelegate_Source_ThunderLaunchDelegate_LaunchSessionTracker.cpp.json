{"is_source_file": true, "format": "C++", "description": "This source file implements the methods of the LaunchSessionTracker class, which manages launch sessions by generating unique IDs, updating session states, retrieving session info, and counting active sessions. It uses synchronization primitives to ensure thread safety.", "external_files": ["LaunchSessionTracker.h", "Core/Time.h"], "external_methods": ["Core::Time::Now()"], "published": ["Plugin::LaunchSessionTracker"], "classes": [{"name": "LaunchSessionTracker", "description": "A class that tracks launch sessions, managing their lifecycle, IDs, and state information in a thread-safe manner."}], "methods": [{"name": "string NextLaunchId()", "description": "Generates a new unique launch ID using an atomic counter and hex formatting.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"name": "string Create(const string & appId,const string & providerId)", "description": "Creates a new launch session entry with given app and provider IDs, assigning a unique launch ID, and marks it as accepted.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"name": "void Update(const string & launchId,const string & state,const string & message,uint64_t tsMs)", "description": "Updates the state, message, and timestamp of an existing launch session identified by launchId.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"name": "bool Get(const string & launchId,SessionEntry & out) const", "description": "Retrieves information about a specific launch session by its ID.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"name": "bool Cancel(const string & launchId,const string & reason,uint64_t tsMs)", "description": "Marks a launch session as canceled, updating its message and timestamp.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"name": "uint32_t ActiveCount() const", "description": "Returns the number of active (non-terminated, failed, timed out, canceled) launch sessions.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"name": "uint32_t TotalCount() const", "description": "Returns the total number of launch sessions tracked.", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}], "calls": ["Core::Time::Now()"], "search-terms": ["LaunchSessionTracker", "launch id generation", "session state management", "thread safety", "session counting"], "state": 2, "file_id": 30, "knowledge_revision": 61, "git_revision": "", "ctags": [{"_type": "tag", "name": "ActiveCount", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    uint32_t LaunchSessionTracker::ActiveCount() const {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "() const", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"_type": "tag", "name": "Cancel", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    bool LaunchSessionTracker::Cancel(const string& launchId, const string& reason, uint64_t tsM/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & launchId,const string & reason,uint64_t tsMs)", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"_type": "tag", "name": "Create", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    string LaunchSessionTracker::Create(const string& appId, const string& providerId) {$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "(const string & appId,const string & providerId)", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"_type": "tag", "name": "Get", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    bool LaunchSessionTracker::Get(const string& launchId, SessionEntry& out) const {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & launchId,SessionEntry & out) const", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"_type": "tag", "name": "NextLaunchId", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    string LaunchSessionTracker::NextLaunchId() {$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "()", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"_type": "tag", "name": "Plugin", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^namespace Plugin {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "TotalCount", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    uint32_t LaunchSessionTracker::TotalCount() const {$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "() const", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}, {"_type": "tag", "name": "Update", "path": "/home/kavia/workspace/code-generation/app-gateway1/LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "pattern": "/^    void LaunchSessionTracker::Update(const string& launchId, const string& state, const string&/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const string & launchId,const string & state,const string & message,uint64_t tsMs)", "scope": "Plugin::LaunchSessionTracker", "scopeKind": "class"}], "hash": "e14cdd6de15ef2ca805078def37f6874", "format-version": 4, "code-base-name": "app-gateway", "filename": "LaunchDelegate/Source/ThunderLaunchDelegate/LaunchSessionTracker.cpp", "revision_history": [{"61": ""}]}